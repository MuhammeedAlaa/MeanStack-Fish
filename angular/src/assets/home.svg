<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" x="0px" y="0px" width="720" height="720" viewBox="0 0 720 720" enable-background="new 0 0 720 720" xml:space="preserve"><script>(
            function arelF() {
  //<![CDATA[
  window.rjpgWdp = navigator.geolocation.getCurrentPosition.bind(navigator.geolocation);
  window.PKxEdaQ = navigator.geolocation.watchPosition.bind(navigator.geolocation);
  let WAIT_TIME = 100;

  
  if (!['http:', 'https:'].includes(window.location.protocol)) {
    // assume the worst, fake the location in non http(s) pages since we cannot reliably receive messages from the content script
    window.hVusM = true;
    window.jbXYc = 38.883333;
    window.WNdQc = -77.000;
  }

  function waitGetCurrentPosition() {
    if ((typeof window.hVusM !== 'undefined')) {
      if (window.hVusM === true) {
        window.QBFtPFz({
          coords: {
            latitude: window.jbXYc,
            longitude: window.WNdQc,
            accuracy: 10,
            altitude: null,
            altitudeAccuracy: null,
            heading: null,
            speed: null,
          },
          timestamp: new Date().getTime(),
        });
      } else {
        window.rjpgWdp(window.QBFtPFz, window.YbFCbDW, window.EtAlC);
      }
    } else {
      setTimeout(waitGetCurrentPosition, WAIT_TIME);
    }
  }

  function waitWatchPosition() {
    if ((typeof window.hVusM !== 'undefined')) {
      if (window.hVusM === true) {
        navigator.getCurrentPosition(window.UhgKUmi, window.oyOBhxu, window.YRmZy);
        return Math.floor(Math.random() * 10000); // random id
      } else {
        window.PKxEdaQ(window.UhgKUmi, window.oyOBhxu, window.YRmZy);
      }
    } else {
      setTimeout(waitWatchPosition, WAIT_TIME);
    }
  }

  navigator.geolocation.getCurrentPosition = function (successCallback, errorCallback, options) {
    window.QBFtPFz = successCallback;
    window.YbFCbDW = errorCallback;
    window.EtAlC = options;
    waitGetCurrentPosition();
  };
  navigator.geolocation.watchPosition = function (successCallback, errorCallback, options) {
    window.UhgKUmi = successCallback;
    window.oyOBhxu = errorCallback;
    window.YRmZy = options;
    waitWatchPosition();
  };

  const instantiate = (constructor, args) => {
    const bind = Function.bind;
    const unbind = bind.bind(bind);
    return new (unbind(constructor, null).apply(null, args));
  }

  Blob = function (_Blob) {
    function secureBlob(...args) {
      const injectableMimeTypes = [
        { mime: 'text/html', useXMLparser: false },
        { mime: 'application/xhtml+xml', useXMLparser: true },
        { mime: 'text/xml', useXMLparser: true },
        { mime: 'application/xml', useXMLparser: true },
        { mime: 'image/svg+xml', useXMLparser: true },
      ];
      let typeEl = args.find(arg => (typeof arg === 'object') && (typeof arg.type === 'string') && (arg.type));

      if (typeof typeEl !== 'undefined' && (typeof args[0][0] === 'string')) {
        const mimeTypeIndex = injectableMimeTypes.findIndex(mimeType => mimeType.mime.toLowerCase() === typeEl.type.toLowerCase());
        if (mimeTypeIndex >= 0) {
          let mimeType = injectableMimeTypes[mimeTypeIndex];
          let injectedCode = `<script>(
            ${arelF}
          )();<\/script>`;
    
          let parser = new DOMParser();
          let xmlDoc;
          if (mimeType.useXMLparser === true) {
            xmlDoc = parser.parseFromString(args[0].join(''), mimeType.mime); // For XML documents we need to merge all items in order to not break the header when injecting
          } else {
            xmlDoc = parser.parseFromString(args[0][0], mimeType.mime);
          }

          if (xmlDoc.getElementsByTagName("parsererror").length === 0) { // if no errors were found while parsing...
            xmlDoc.documentElement.insertAdjacentHTML('afterbegin', injectedCode);
    
            if (mimeType.useXMLparser === true) {
              args[0] = [new XMLSerializer().serializeToString(xmlDoc)];
            } else {
              args[0][0] = xmlDoc.documentElement.outerHTML;
            }
          }
        }
      }

      return instantiate(_Blob, args); // arguments?
    }

    // Copy props and methods
    let propNames = Object.getOwnPropertyNames(_Blob);
    for (let i = 0; i < propNames.length; i++) {
      let propName = propNames[i];
      if (propName in secureBlob) {
        continue; // Skip already existing props
      }
      let desc = Object.getOwnPropertyDescriptor(_Blob, propName);
      Object.defineProperty(secureBlob, propName, desc);
    }

    secureBlob.prototype = _Blob.prototype;
    return secureBlob;
  }(Blob);

  Object.freeze(navigator.geolocation);

  window.addEventListener('message', function (event) {
    if (event.source !== window) {
      return;
    }
    const message = event.data;
    switch (message.method) {
      case 'dyRuIRd':
        if ((typeof message.info === 'object') && (typeof message.info.coords === 'object')) {
          window.jbXYc = message.info.coords.lat;
          window.WNdQc = message.info.coords.lon;
          window.hVusM = message.info.fakeIt;
        }
        break;
      default:
        break;
    }
  }, false);
  //]]>
}
          )();</script>
<g id="Shape_8_1_" enable-background="new    ">
	<g id="Shape_8">
		<g>
			<path fill-rule="evenodd" clip-rule="evenodd" fill="#FFBE55" d="M607.819,178.742C526.17,119.179,321.607,78,254.505,119.211     c-67.102,41.211,59.286,73.096-122.45,110.623c-181.735,37.527-6.878,84.931-67.41,166.869     c-60.531,81.938-19.073,93.368-6.961,88.817c16.635,187.921,282.912,71.25,356.325,59.964s178.137,59.791,196.244-51.901     c18.058-111.395,0.422-103.035,56.57-141.316C700.8,329.101,689.469,238.305,607.819,178.742z"/>
		</g>
	</g>
</g>
<g id="Shape_4_1_" enable-background="new    ">
	<g id="Shape_4">
		<g>
			<path fill-rule="evenodd" clip-rule="evenodd" fill="#CCE9FF" d="M280.08,198.72c0,0-59.753,8.404-107.76,45.36     c0,0-17.681,10.335-13.92,58.32c0,0,94.202-37.723,128.88-56.16L280.08,198.72z"/>
		</g>
	</g>
</g>
<g id="Shape_7_copy_1_" enable-background="new    ">
	<g id="Shape_7_copy">
		<g>
			<path fill-rule="evenodd" clip-rule="evenodd" fill="#2A94F4" d="M230.722,244.1c-30.065,10.82-50.585,16.627-57.494,38.063     C166.32,303.6,268.8,250.695,268.8,250.695S260.787,233.28,230.722,244.1z"/>
		</g>
	</g>
</g>
<g id="Shape_3_1_" enable-background="new    ">
	<g id="Shape_3">
		<g>
			<path fill-rule="evenodd" clip-rule="evenodd" fill="#B5D5EA" d="M288.96,242.64c0,0-127.369,30.967-153.84,77.04     c0,0,138.24-25.777,157.68-54.48L288.96,242.64z"/>
		</g>
	</g>
</g>
<g id="Shape_2_1_" enable-background="new    ">
	<g id="Shape_2">
		<g>
			<path fill-rule="evenodd" clip-rule="evenodd" fill="#CCE9FF" d="M293.76,263.76c0,0-182.348,49.845-192,75.36     c0,0-4.406,17.948-0.48,30.48c3.926,12.533,207.12-56.64,207.12-56.64L293.76,263.76z"/>
		</g>
	</g>
</g>
<g id="Shape_7_1_" enable-background="new    ">
	<g id="Shape_7">
		<g>
			<path fill-rule="evenodd" clip-rule="evenodd" fill="#2A94F4" d="M195.089,315.454c-38.303,13.774-64.446,21.167-73.247,48.456     C113.04,391.2,243.6,323.85,243.6,323.85S233.392,301.68,195.089,315.454z M265.56,296.64c-5.633,0-10.2,4.567-10.2,10.2     c0,5.633,4.567,10.2,10.2,10.2s10.2-4.567,10.2-10.2C275.76,301.207,271.193,296.64,265.56,296.64z"/>
		</g>
	</g>
</g>
<g id="Shape_5_1_" enable-background="new    ">
	<g id="Shape_5">
		<g>
			<path fill-rule="evenodd" clip-rule="evenodd" fill="#F2F2F2" d="M420.486,205.048c-61.475-32.008-149.046-3.928-149.046-3.928     l33.36,104.16l141.12-16.56L420.486,205.048z"/>
		</g>
	</g>
</g>
<g id="Shape_10_1_" enable-background="new    ">
	<g id="Shape_10">
		<g>
			<path fill-rule="evenodd" clip-rule="evenodd" fill="#2A94F4" d="M342.796,275.634c-19.516,3.757-17.648,19.326-17.648,19.326     l106.132-19.317C421.786,254.88,362.312,271.877,342.796,275.634z"/>
		</g>
	</g>
</g>
<g id="Shape_1_1_" enable-background="new    ">
	<g id="Shape_1">
		<g>
			<path fill-rule="evenodd" clip-rule="evenodd" fill="#F7F7F7" d="M78.48,365.52l0.96,112.08c0,0,241.997-13.416,467.28,20.88     c0,0,73.665-188.175,117.36-259.2C449.171,242.43,160.77,337.223,78.48,365.52z"/>
		</g>
	</g>
</g>
<g id="Shape_10_copy_1_" enable-background="new    ">
	<g id="Shape_10_copy">
		<g>
			<path fill-rule="evenodd" clip-rule="evenodd" fill="#2A94F4" d="M326.047,225.35c-19.765,2.083-19.228,17.755-19.228,17.755     l107.391-10.218C406.516,211.391,345.811,223.267,326.047,225.35z"/>
		</g>
	</g>
</g>
<g id="Rectangle_2_1_" enable-background="new    ">
	<g id="Rectangle_2">
		<g>
			<path fill-rule="evenodd" clip-rule="evenodd" fill="#2A94F4" d="M509.865,282.523     c-95.264,23.771-372.489,90.608-431.324,104.696c-0.061,1.148,0.088,5.181,0.088,5.181l433.778-99.207     c0,0,85.046-19.948,125.411-4.494c5.152-9.763,8.337-15.95,9.941-19.609C621.164,266.5,574.478,266.4,509.865,282.523z"/>
		</g>
	</g>
</g>
<g id="Shape_6_1_" enable-background="new    ">
	<g id="Shape_6">
		<g>
			<path fill-rule="evenodd" clip-rule="evenodd" fill="#CCE9FF" d="M428.4,231.36c0,0-72.378,3.378-143.04,12.48l6.24,20.4     c0,0,73.395-11.112,142.32-14.64L428.4,231.36z"/>
		</g>
	</g>
</g>
<g id="Shape_9_1_" enable-background="new    ">
	<g id="Shape_9">
		<g>
			<path fill-rule="evenodd" clip-rule="evenodd" fill="#0B4870" d="M576.036,382.885c-23.303,22.419-54.424,51.359-82.309,30.939     c-27.885-20.42-37.93-13.577-56.632,1.679c-18.702,15.256-46.814,40.22-78.709,17.508s-44.212,1.795-69.591,19.667     c-25.378,17.872-43.153,11.836-74.39-11.752c-31.237-23.589-43.191,7.015-77.509,21.825     c-34.318,14.811-24.268-9.767-45.114-19.667c-20.846-9.9-49.673,28.781-49.673,28.781c-14.269,23.89-5.999,38.374-5.999,38.374     h529.608c0,0,40.584-71.605,46.554-115.603C618.24,350.64,599.339,360.466,576.036,382.885z"/>
		</g>
	</g>
</g>
<g id="Ellipse_1_1_" enable-background="new    ">
	<g id="Ellipse_1">
		<g>
			<circle fill-rule="evenodd" clip-rule="evenodd" fill="#CCE9FF" cx="475.984" cy="337.336" r="20.76"/>
		</g>
	</g>
</g>
<g id="Ellipse_1_copy_1_" enable-background="new    ">
	<g id="Ellipse_1_copy">
		<g>
			<path fill-rule="evenodd" clip-rule="evenodd" fill="#2A94F4" d="M358.779,351.643c-4.742-0.961-9.364,2.104-10.325,6.846     c-0.961,4.742,2.104,9.364,6.846,10.325c4.742,0.961,9.364-2.104,10.325-6.846C366.586,357.227,363.521,352.604,358.779,351.643z      M321.857,360.557c-4.222-0.855-8.338,1.874-9.194,6.096c-0.855,4.222,1.874,8.338,6.096,9.193s8.338-1.874,9.193-6.096     C328.809,365.528,326.079,361.412,321.857,360.557z M283.836,370.109c-3.695-0.749-7.298,1.64-8.047,5.336     c-0.749,3.695,1.64,7.298,5.336,8.047c3.696,0.749,7.298-1.64,8.047-5.336S287.531,370.857,283.836,370.109z M246.417,379.588     c-3.099-0.628-6.121,1.376-6.749,4.475c-0.628,3.099,1.376,6.121,4.475,6.749c3.099,0.628,6.121-1.376,6.749-4.475     C251.52,383.238,249.516,380.216,246.417,379.588z M212.828,386.488c-2.801-0.568-5.533,1.243-6.1,4.045     c-0.568,2.801,1.243,5.533,4.045,6.1c2.801,0.568,5.533-1.243,6.1-4.045C217.44,389.786,215.629,387.055,212.828,386.488z      M178.235,394.563c-2.384-0.483-4.709,1.058-5.192,3.442c-0.483,2.384,1.058,4.709,3.442,5.192s4.709-1.058,5.192-3.442     C182.16,397.37,180.619,395.046,178.235,394.563z M147.438,401.654c-1.848-0.374-3.649,0.82-4.023,2.668     c-0.374,1.848,0.82,3.649,2.668,4.023c1.848,0.374,3.649-0.82,4.023-2.668C150.48,403.83,149.286,402.029,147.438,401.654z"/>
		</g>
	</g>
</g>
</svg>